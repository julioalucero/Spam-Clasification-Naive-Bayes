#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'bayes'

puts "\n" + "*" * 80  + "\n" +
     " " * 20 + "Detector de Spam" + " " * 20 + "\n" +
     "*" * 80 + "\n"


email = IO.read("spamTrain.label")
lines = email.split("\n")
lines.collect! { |l| l.split }
SPAM_HASH = Hash.new
lines.each do |line|
  SPAM_HASH[line[1]] = line[0]
end

p "Comienza Fase de Lectura de e-Mails"

#file_path = 'emails/mails.csv'
#
#emails = Bayes::Csv.new(file_path)

p "Finaliza Fase de Lectura de e-Mails"
p "***********************************"

p "Comienza Fase de Entremamiento" 

#800 entrenamiento y 200 de prueba 


emails = [
['hola','como','andas','todo','bien'],
['hola','hola', 'como', 'ayer','venian'],
['hola', 'ayer', 'guiso','guido'],
['lala', 'junio','julio','agosto']]

spam = [
['sex','photo','alternativo','sex','webcam'],
['sex','sex','hola', 'hola', 'como', 'andas'],
['webcam', 'sex','girl','lala'],
['sarasa','ayer', 'venian','guido']]


dataBase = Bayes::BayesTraining.new(emails,spam)
dataBase.clasification


p "Finaliza Fase Entrenamiento"
p "***********************************"

p "Comienza Fase de Clasificacion" 



p "El porcentaje de errores es: "


p "Finaliza Fase de Clasificacion"
p "***********************************"




